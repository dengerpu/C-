#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
//int main() {
//	int a = 10;  //0x0093F8E0  0a 00 00 00
//	//一般电脑存储的都是小端模式 （内存中存储的是反的）
//	//  00        00      00        0a
//	//00000000 00000000 00000000 00001010
//
//	float f = 10.0;  //0x008FFB44  42 f2 35 0f
//
//	short c = 10;		//0x0135FB68  0a 00 cc cc
//	short int b = 10; // 0x0135FB5C  0a 00 cc cc
//	return 0;
//}

//void test(void){
//	printf("hehe\n");
//}
//int main() {
//	test();
//	return 0;
//}

//int main() {
//	int a = 20;  //4个字节32bit位
////	//00000000000000000000000000010100 - 原码
////	//00000000000000000000000000010100 - 反码
////	//00000000000000000000000000010100 - 补码
////	//0x00000014
//	//内存中：0x00AFF800  14 00 00 00 
//	int b = -10;
////	//10000000000000000000000000001010 - 原码
////	//11111111111111111111111111110101 - 反码
////	//1111 1111 1111 1111 1111 1111 1111 0110 - 补码
////	//0xFFFFFFF6
//	//内存中：0x00AFF7F4  f6 ff ff ff  
//
//	return 0;
//}

/*
	大端（存储）模式：是指数据的低位保存在内存的高地址中，而数据的高位保存在内存的低地址中
	小端（存储）模式：是指数据的低位保存在内存的低地址中，而数据的高位保存在高地址中
*/

//int main() {
//	int a = 0x11223344
//	int* p = &a;
//	*p = 0;
//}

//
//int main()
//{
//	1 - 1;
//	//1 + (-1)
//	//00000000000000000000000000000001
//	//11111111111111111111111111111111
//	//00000000000000000000000000000000
//
//	//10000000000000000000000000000001
//	//11111111111111111111111111111110
//	//11111111111111111111111111111111
//
//	//00000000000000000000000000000001
//	//10000000000000000000000000000001
//	//10000000000000000000000000000010
//
//	return 0;
//}
//

//输出什么？
//#include <stdio.h>
//int main()
//{
//	char a = -1;
//	//10000000000000000000000000000001
//	//11111111111111111111111111111110
//	//11111111111111111111111111111111
//	//11111111111111111111111111111111
//	//
//	signed char b = -1;
//	//11111111
//	//
//	unsigned char c = -1;
//	//00000000000000000000000011111111
//	//255
//	printf("a=%d,b=%d,c=%d", a, b, c);
//	//-1 -1  255
//	return 0;
//}

//int main()
//{
//	char a = -128;
//	//10000000000000000000000010000000
//	//11111111111111111111111101111111
//	//11111111111111111111111110000000-补码
//	//10000000
//	//11111111111111111111111110000000-补码
//	//
//	printf("%u\n", a);
//
//	//%d - 打印十进制的有符号数字
//	//%u - 打印十进制的无符号数字
//
//	return 0;
//}

//#include <stdio.h>
//int main()
//{
//	char a = 128;
//	//10000000000000000000000010000000
//	//11111111111111111111111101111111
//	//11111111111111111111111110000000-补码
//	//10000000
//	//11111111111111111111111110000000-补码
//	//
//	printf("%u\n", a);
//
//	//%d - 打印十进制的有符号数字
//	//%u - 打印十进制的无符号数字
//
//	return 0;
//}

//
//int main()
//{
//	int i = -20;
//	unsigned  int  j = 10;
//	printf("%d\n", i + j);
//	//按照补码的形式进行运算，最后格式化成为有符号整数
//	return 0;
//}
//


//1000000 00000000 00000000 00010100
//1111111 11111111 11111111 11101011
//1111111 11111111 11111111 11101100 - 补码
//0000000 00000000 00000000 00001010 - 补码
//1111111 11111111 11111111 11110110 - 结果
//1111111 11111111 11111111 11110101
//1000000 00000000 00000000 00001010 - -10 

//#include <windows.h>
//
//int main()
//{
//	unsigned int i;
//	for (i = 9; i >= 0; i--)
//	{
//		printf("%u\n", i);
//		Sleep(100);
//	}
//
//	return 0;
////}
//#include<string.h>
//int main()
//{
//	char a[1000];
//	int i;
//	for (i = 0; i<1000; i++)
//	{
//		a[i] = -1 - i;
//	}
//	printf("%d", strlen(a));
//
//	return 0;
//}

#include <stdio.h>

unsigned char i = 0;//0-255

int main()
{
	for (i = 0; i <= 255; i++)
	{
		printf("hello world\n");
	}
	return 0;
}